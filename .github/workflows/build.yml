name: nf-fuzzball CI
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      publish_release:
        description: 'Publish release (default: false)'
        required: true
        default: false
        type: boolean

jobs:
  build:
    name: Build nf-fuzzball
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:

      - name: Get Fuzzball version on stable
        run: |
          FUZZBALL_VERSION=$(curl -s https://api.stable.fuzzball.ciq.dev/v2/version | jq -r '.version')
          echo "FUZZBALL_VERSION=${FUZZBALL_VERSION}" >> $GITHUB_ENV

      - name: Environment
        run: env | sort

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true
      
      - name: Get plugin version
        run: |
          echo "Getting plugin version from build.gradle"
          PLUGIN_VERSION=$(grep -E "version\s*=" build.gradle | head -1 | sed -E "s/.*version\s*=\s*'([^']+)'.*/\1/")
          echo "PLUGIN_VERSION=${PLUGIN_VERSION}" >> $GITHUB_ENV

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          architecture: x64
          distribution: 'temurin'

      - name: Compile
        run: ./gradlew assemble

      - name: Tests
        run: ./gradlew check
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'
      
      - name: Create Release
        id: create_release
        if: github.event.inputs.publish_release == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PLUGIN_VERSION }}-stable-${{ env.FUZZBALL_VERSION }}
          release_name: Release v${{ env.PLUGIN_VERSION }}-stable-${{ env.FUZZBALL_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        if: github.event.inputs.publish_release == 'true' 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/nf-fuzzball-${{ env.PLUGIN_VERSION }}.zip
          asset_name: nf-fuzzball-${{ env.PLUGIN_VERSION }}-stable-${{ env.FUZZBALL_VERSION }}.zip
          asset_content_type: application/zip

