// Copyright 2025 CIQ, Inc. All rights reserved.

plugins {
    // https://plugins.gradle.org/plugin/io.nextflow.nextflow-plugin
    // https://github.com/nextflow-io/nextflow-plugin-gradle
    id 'io.nextflow.nextflow-plugin' version '1.0.0-beta.6'
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:5.0.0'
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
}

// plugin version - gradle by convention seems to not use v prefixes. That does
// cause some issues in other places but we'll stick with convention
version = '0.1.1'

nextflowPlugin {
    // minimum nextflow version
    nextflowVersion = '25.04.0'

    provider = 'CIQ'
    description = 'Fuzzball executor'
    className = 'com.ciq.fuzzball.FuzzballPlugin'
    extensionPoints = [
        'com.ciq.fuzzball.FuzzballTraceObserverFactory',
        'com.ciq.fuzzball.FuzzballExecutor'
    ]

}


// auto-generated fuzzball SDK
def generatedSdkDir = project.layout.buildDirectory.dir('generated/src/main/groovy')

tasks.register('generateFuzzballSdk', Exec) {
    final codegenDir = project.layout.projectDirectory.dir('code-generation')
    final codegenFile = codegenDir.file('generate')
    group = 'build'
    description = 'Generate Fuzzball SDK'
    inputs.files(
        fileTree(dir: codegenDir, include: ['**/*.yaml', '**/*.mustache', '**/*.sh'])
    )
    outputs.dir generatedSdkDir

    // Build commandLine args based on which property was provided
    def args = [codegenFile.getAsFile().getAbsolutePath()]
    if (project.hasProperty('openapiFile')) {
        args.add("--file=${project.property('openapiFile')}")
    } else if (project.hasProperty('openapiUrl')) {
        args.add("--url=${project.property('openapiUrl')}")
    }
    args.add(generatedSdkDir.get().getAsFile().getAbsolutePath())

    commandLine args
}
compileGroovy.dependsOn tasks.named('generateFuzzballSdk')

sourceSets {
    main {
        groovy {
            srcDir generatedSdkDir
        }
    }
}
