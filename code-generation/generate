#! /bin/bash
#>SYNOPSIS
#>  generate [--keep] [--url=URL|--file=FILE] PATH
#>  generate --help
#>
#>DESCRIPTION
#>  Generate a groovy fuzzball-sdk from the openapi spec. Uses several custom templates
#>  to generate more modern groovy code including replacing the unmaintained httpbuilder-ng with
#>  okhttp3.
#>
#>  PATH
#>      Locate to save the auto-generated SDK to. If PATH exists it will be deleted and replaced
#>      with the generated code.
#>  --url
#>      URL of the OpenAPI spec to fetch (defaults to https://api.stable.fuzzball.ciq.dev/v3/schema)
#>  --file
#>      File of the OpenAPI spec. Defaults to none and when specified takes precedence over
#>      --url.
#>  --keep
#>      Keep the full generated project. Othewise only the groovy files are copied.
#>
#>Copyright 2025 CIQ, Inc. All rights reserved.

EXIT_SUCCESS=0
EXIT_NODOWNLOADER=100
EXIT_DOWNLOAD_FAILED=101
EXIT_CODEGEN_FAILED=102
EXIT_SED_FAILED=103
EXIT_MISSING_FILE=104
EXIT_MISSING_JQ=105

keep=false
path="__none__"
url="https://api.stable.fuzzball.ciq.dev/v3/schema"
specfile="__none__"
while [[ $# -gt 0 ]]; do
    case "$1" in
        --keep)
            keep=true
            ;;
        --url)
            url="$2"
            shift
            ;;
        --url=*)
            url="${1#--url=}"
            ;;
        --file)
            specfile="$2"
            shift
            ;;
        --file=*)
            specfile="${1#--file=}"
            ;;
        --help)
            awk '/^#>/{sub(/^#>/,"");print}' "$0"
            exit 0
            ;;
        *)
            path="$1"
            ;;
    esac
    shift
done

if [[ "${path:-__none__}" == "__none__" ]]; then
    awk '/^#>/{sub(/^#>/,"");print}' "$0"
    exit 1
fi
if [[ ! "$path" =~ ^/ ]]; then
    path="${PWD}/${path}"
fi

spec="${url}"
if [[ "${specfile}" != "__none__" ]]; then
    if [[ ! "${specfile}" =~ ^/ ]]; then
        specfile="${PWD}/${specfile}"
    fi
    if [[ ! -e "${specfile}" ]]; then
        echo "Error: ${specfile} does not exist"
        exit $EXIT_MISSING_FILE
    fi
    spec="${specfile}"
fi

ver=7.16.0
scriptd="$(cd "$(dirname "$0")" && pwd)"
gen="openapi-generator-cli-${ver}.jar"
name="fuzzball-sdk"

cd "${scriptd}" || exit 100
if [[ ! -e "${gen}" ]]; then
    if ! command -v wget >/dev/null 2>&1; then
        if command -v curl >/dev/null 2>&1; then
            curl -L -o "${gen}" "https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/${ver}/${gen}" || exit $EXIT_DOWNLOAD_FAILED
        else
            echo "Error: wget or curl required to download ${gen}" >&2
            exit $EXIT_NODOWNLOADER
        fi
    else
        wget "https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/${ver}/${gen}" || exit $EXIT_DOWNLOAD_FAILED
    fi
fi

tmp=$(mktemp -d)
trap 'rm -rf "$tmp"' EXIT

java -jar "./${gen}" \
    generate \
	  -g groovy \
	  -c generate_config.yaml \
	  -o  "${tmp}/${name}" \
	  -i "${spec}" || exit $EXIT_CODEGEN_FAILED

# - i could not remove the imports for io.swagger.annotations from the generated code without a custom generator
if sed --version >/dev/null 2>&1; then
    # GNU sed
    sed -i -E -e '/import io\.swagger\.annotations\.[^;]+;/d' "${tmp}/${name}"/src/main/groovy/com/ciq/fuzzball/model/*.groovy || exit $EXIT_SED_FAILED
else
    # BSD/macOS sed
    sed -i .bak -E -e '/import io\.swagger\.annotations\.[^;]+;/d' "${tmp}/${name}"/src/main/groovy/com/ciq/fuzzball/model/*.groovy || exit $EXIT_SED_FAILED
    rm -f "${tmp}/${name}"/src/main/groovy/com/ciq/fuzzball/model/*.bak*
fi



rm -rf "${path}"
if $keep; then
    mv "${tmp}/${name}" "${path}"
else
    mkdir -p "${path}"
    mv "${tmp}/${name}"/src/main/groovy/com/ciq/fuzzball "${path}"
fi

printf -- "------------------------------------------------\n"
printf "Fuzzball SDK generated in %s\n" "${path}"
printf "  source:    %s\n" "${spec}"
printf "  generator: %s\n" "${gen}"
printf "  scriptd:   %s\n" "${scriptd}"
printf -- "------------------------------------------------\n"
